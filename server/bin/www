#!/usr/bin/env node

process.env.PORT= process.env.PORT || '3000' 
process.env.NODE_ENV= process.env.NODE_ENV || 'development'
process.env.SERVER_PORT= process.env.SERVER_PORT || '4040'
process.env.JWT_SECRET='0a6b944d-d2fb-46fc-a85e-0295c986cd9f'
process.env.MONGO_HOST='172.17.0.2'
process.env.MONGO_PORT='27017'
process.env.MONGO_DATABASE='ogenio'

const util = require( '../helpers/helper.util' );
const debug = require( 'debug' )( 'crud-express:server' )
const http = require( 'http' )
const app = require( '../server' )
const port = util.normalizePort( process.env.PORT || '3000' )

app.set( 'port', port )

const server = http.createServer( app )

const onError = ( error ) => {
  if ( error.syscall !== 'listen' ) {
    throw error
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch ( error.code ) {
    case 'EACCES':
      console.error( bind,  " requires elevated privileges")
      process.exit( 1 )
      break
    case 'EADDRINUSE':
      console.error( bind, " is already in use")
      process.exit( 1 )
      break
    default:
      throw error
  }
}

const onListening = () => {
  const addr = server.address()
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  debug( "Listening on ", bind )
}

server.listen( port )
server.on( 'error', onError )
server.on( 'listening', onListening )
